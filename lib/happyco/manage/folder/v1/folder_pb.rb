# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: happyco/manage/folder/v1/folder.proto

require 'google/protobuf'

require 'happyco/type/v1/integration_id_pb'
require 'happyco/type/v1/paging_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "happyco.manage.folder.v1.Folder" do
    optional :id, :message, 1, "happyco.type.v1.IntegrationID"
    optional :inactive, :bool, 4
    optional :name, :string, 2
    optional :type, :enum, 3, "happyco.manage.folder.v1.Folder.Type"
  end
  add_enum "happyco.manage.folder.v1.Folder.Type" do
    value :MULTI_FAMILY, 0
    value :PROPERTY_MANAGEMENT, 1
  end
  add_message "happyco.manage.folder.v1.ListFoldersRequest" do
    optional :account_id, :message, 1, "happyco.type.v1.IntegrationID"
    repeated :folder_ids, :message, 2, "happyco.type.v1.IntegrationID"
    optional :include_inactive, :bool, 3
    optional :paging, :message, 4, "happyco.type.v1.Paging"
  end
  add_message "happyco.manage.folder.v1.ListFoldersResponse" do
    repeated :folders, :message, 1, "happyco.manage.folder.v1.Folder"
    optional :paging, :message, 2, "happyco.type.v1.PagingResponse"
  end
  add_message "happyco.manage.folder.v1.CreateFoldersRequest" do
    optional :account_id, :message, 1, "happyco.type.v1.IntegrationID"
    repeated :folders, :message, 2, "happyco.manage.folder.v1.Folder"
  end
  add_message "happyco.manage.folder.v1.CreateFoldersResponse" do
    repeated :folder_ids, :message, 1, "happyco.type.v1.IntegrationID"
  end
  add_message "happyco.manage.folder.v1.UpdateFoldersRequest" do
    optional :account_id, :message, 1, "happyco.type.v1.IntegrationID"
    repeated :folders, :message, 2, "happyco.manage.folder.v1.Folder"
  end
  add_message "happyco.manage.folder.v1.UpdateFoldersResponse" do
    repeated :ids, :message, 1, "happyco.type.v1.IntegrationID"
  end
  add_message "happyco.manage.folder.v1.UpdateFolderStatusesRequest" do
    optional :account_id, :message, 1, "happyco.type.v1.IntegrationID"
    repeated :folder_ids, :message, 2, "happyco.type.v1.IntegrationID"
    optional :inactive, :bool, 3
  end
  add_message "happyco.manage.folder.v1.UpdateFolderStatusesResponse" do
  end
end

module Happyco
  module Manage
    module Folder
      module V1
        Folder = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.Folder").msgclass
        Folder::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.Folder.Type").enummodule
        ListFoldersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.ListFoldersRequest").msgclass
        ListFoldersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.ListFoldersResponse").msgclass
        CreateFoldersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.CreateFoldersRequest").msgclass
        CreateFoldersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.CreateFoldersResponse").msgclass
        UpdateFoldersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.UpdateFoldersRequest").msgclass
        UpdateFoldersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.UpdateFoldersResponse").msgclass
        UpdateFolderStatusesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.UpdateFolderStatusesRequest").msgclass
        UpdateFolderStatusesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("happyco.manage.folder.v1.UpdateFolderStatusesResponse").msgclass
      end
    end
  end
end
